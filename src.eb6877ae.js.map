{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","minutes","seconds","CountdownTimer","constructor","selector","targetDate","start","setInterval","date","Date","now","time","getTime","timeComponents","getTimeComponents","updateTimer","mins","secs","textContent","pad","Math","floor","timer","value","String","padStart"],"mappings":";;;AAgEC,aAhED,QAAA,oBAGA,MAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,QAASH,SAASC,cAAc,uBAChCG,QAASJ,SAASC,cAAc,wBAGpC,MAAMI,EAEFC,aAAY,SAACC,EAAD,WAAUC,IACbA,KAAAA,WAAaA,EAGtBC,QAEIC,YAAY,KAEFC,MAAAA,EAAOC,KAAKC,MACdC,IAAAA,EAAO,KAAKN,WAAWO,UAAYJ,EACnCK,EAAiB,KAAKC,kBAAkBH,GAEvCI,KAAAA,YAAYF,IACnB,KAKNE,aAAY,KAACnB,EAAD,MAAMG,EAAN,KAAYiB,EAAZ,KAAiBC,IACzBtB,EAAKC,KAAKsB,YAActB,EACxBD,EAAKI,MAAMmB,YAAcnB,EACzBJ,EAAKK,QAAQkB,YAAcF,EAC3BrB,EAAKM,QAAQiB,YAAcD,EAG/BH,kBAAkBH,GAYP,MAAA,CAACf,KAVKuB,EAAIC,KAAKC,MAAMV,EAAQ,QAUvBZ,MAPCoB,EAAIC,KAAKC,MAAOV,EAAQ,MAAyB,OAO5CK,KAJNG,EAAIC,KAAKC,MAAOV,EAAQ,KAAoB,MAIjCM,KADXE,EAAIC,KAAKC,MAAOV,EAAQ,IAAc,QAM3D,MAAMW,EAAQ,IAAIpB,EAAe,CAC7BE,SAAU,WACVC,WAAY,IAAII,KAAK,iBAMzB,SAASU,EAAII,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAE,KAJpCH,EAAMhB","file":"src.eb6877ae.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n// Не уверен правильно ли таким методом\nconst refs = {\n    days: document.querySelector('[data-value=\"days\"]'),\n    hours: document.querySelector('[data-value=\"hours\"]'),\n    minutes: document.querySelector('[data-value=\"mins\"]'),\n    seconds: document.querySelector('[data-value=\"secs\"]')\n}\n// создал класс с созданием таймера\nclass CountdownTimer{\n    // принимает селектор(хз зачем) и дату события\n    constructor({selector,targetDate}){\n        this.targetDate = targetDate\n    }\n    // метод класса для создание самого таймера\n    start(){\n        // интервал с обновлением таймера\n        setInterval(()=>{\n            \n            const date = Date.now();    \n            let time = this.targetDate.getTime() - date;\n            let timeComponents = this.getTimeComponents(time)\n            \n            this.updateTimer(timeComponents)\n        },1000)\n        \n    }\n    // метод по замене самого текста таймера\n    // Не уверен что нужно именно таким способом\n    updateTimer({days,hours,mins,secs}){\n        refs.days.textContent = days;\n        refs.hours.textContent = hours;\n        refs.minutes.textContent = mins;\n        refs.seconds.textContent = secs;\n    }\n    // метод подсчёта времени\n    getTimeComponents(time){\n \n        const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    \n    \n        const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    \n    \n        const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    \n    \n        const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n        return {days,hours,mins,secs}\n    }\n    \n}\n// создаем новый экземпляр\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Sep 5, 2021'),\n  });\n// вызываем метод\ntimer.start()\n\n// функция по добавлению нуля в начало если число единичное \nfunction pad(value){\n    return String(value).padStart(2,'0')\n}\n"]}