{"version":3,"sources":["index.js"],"names":["refs","stop","document","querySelector","date","days","hours","minutes","seconds","timer","CountdownTimer","constructor","targetDate","timerId","start","setInterval","Date","now","time","getTime","timeComponents","getTimeComponents","updateTimer","clearInterval","mins","secs","textContent","pad","Math","floor","value","String","padStart","setDate","evt","alert","console","log","currentTarget","newDate","addEventListener"],"mappings":";;;AA+FC,aA/FD,QAAA,oBAGA,MAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,gBAC7BC,KAAMF,SAASC,cAAc,aAC7BE,KAAMH,SAASC,cAAc,uBAC7BG,MAAOJ,SAASC,cAAc,wBAC9BI,QAASL,SAASC,cAAc,uBAChCK,QAASN,SAASC,cAAc,wBAEpC,IA8DIM,EA9DAL,EAAOJ,EAAKI,KAGhB,MAAMM,EAEFC,aAAY,WAACC,IACJA,KAAAA,WAAaA,EACbC,KAAAA,QAAU,KAGnBC,QAESD,KAAAA,QAAUE,YAAY,KAEjBX,MAAAA,EAAOY,KAAKC,MACdC,IAAAA,EAAO,KAAKN,WAAWO,UAAYf,EACnCgB,EAAiB,KAAKC,kBAAkBH,GAEvCI,KAAAA,YAAYF,IACnB,KAGNnB,OACIsB,cAAc,KAAKV,SAIvBS,aAAY,KAACjB,EAAD,MAAMC,EAAN,KAAYkB,EAAZ,KAAiBC,IACzBzB,EAAKK,KAAKqB,YAAcrB,EACxBL,EAAKM,MAAMoB,YAAcpB,EACzBN,EAAKO,QAAQmB,YAAcF,EAC3BxB,EAAKQ,QAAQkB,YAAcD,EAG/BJ,kBAAkBH,GAYP,MAAA,CAACb,KAVK,KAAKsB,IAAIC,KAAKC,MAAMX,EAAQ,QAU5BZ,MAPC,KAAKqB,IAAIC,KAAKC,MAAOX,EAAQ,MAAyB,OAOjDM,KAJN,KAAKG,IAAIC,KAAKC,MAAOX,EAAQ,KAAoB,MAItCO,KADX,KAAKE,IAAIC,KAAKC,MAAOX,EAAQ,IAAc,OAI5DS,IAAIG,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAE,MAaxC,SAASC,EAAQC,GACbC,MAAM1B,GACN0B,MAAM/B,GACHK,IACC2B,QAAQC,IAAI,QACZ5B,EAAMR,QAEPiC,IACCE,QAAQC,IAAI,eACdjC,EAAK0B,MAAQI,EAAII,cAAcR,OAGjCM,QAAQC,IAAIjC,EAAK0B,OAEbS,IAAAA,EAAUnC,EAAK0B,MAMZrB,OAJPA,EAAQ,IAAIC,EAAe,CACvBE,WAAY,IAAII,QAAQuB,QAGfzB,QA5BjBd,EAAKI,KAAKoC,iBAAiB,QAASP,GACpCjC,EAAKC,KAAKuC,iBAAiB,QAAS,KAChCL,MAAM1B,GACHA,GACFA,EAAMR","file":"src.141774ae.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n// Не уверен правильно ли таким методом\nconst refs = {\n    stop: document.querySelector('#stop-button'),\n    date: document.querySelector('#calendar'),\n    days: document.querySelector('[data-value=\"days\"]'),\n    hours: document.querySelector('[data-value=\"hours\"]'),\n    minutes: document.querySelector('[data-value=\"mins\"]'),\n    seconds: document.querySelector('[data-value=\"secs\"]')\n}\nlet date = refs.date\n\n// создал класс с созданием таймера\nclass CountdownTimer{\n    // принимает селектор(хз зачем) и дату события\n    constructor({targetDate}){\n        this.targetDate = targetDate\n        this.timerId = null\n    }\n    // метод класса для создание самого таймера\n    start(){\n        // интервал с обновлением таймера\n        this.timerId = setInterval(()=>{\n            \n            const date = Date.now();   \n            let time = this.targetDate.getTime() - date;\n            let timeComponents = this.getTimeComponents(time)\n            \n            this.updateTimer(timeComponents)\n        },1000)\n        \n    }\n    stop(){\n        clearInterval(this.timerId)\n    }\n    // метод по замене самого текста таймера\n    // Не уверен что нужно именно таким способом\n    updateTimer({days,hours,mins,secs}){\n        refs.days.textContent = days;\n        refs.hours.textContent = hours;\n        refs.minutes.textContent = mins;\n        refs.seconds.textContent = secs;\n    }\n    // метод подсчёта времени\n    getTimeComponents(time){\n \n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    \n    \n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    \n    \n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    \n    \n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n        return {days,hours,mins,secs}\n    }\n    // функция по добавлению нуля в начало если число единичное \n    pad(value){\n        return String(value).padStart(2,'0')\n    }\n    \n}\n\nrefs.date.addEventListener('input', setDate)\nrefs.stop.addEventListener('click', ()=>{\n    alert(timer) \n    if(timer)\n    {timer.stop()}\n})\n\nlet timer\nfunction setDate(evt){\n    alert(timer)\n    alert(date)\n    if(timer){\n        console.log('stop');\n        timer.stop()\n    }\n    if(evt){\n        console.log('change data');\n      date.value = evt.currentTarget.value  \n    }\n    \n    console.log(date.value);\n    \n    let newDate = date.value\n    // создаем новый экземпляр\n    timer = new CountdownTimer({\n        targetDate: new Date(`${newDate}`),\n        });  \n    // вызываем метод\n    return timer.start()\n}\n\n\n\n\n \n\n\n\n\n\n"]}